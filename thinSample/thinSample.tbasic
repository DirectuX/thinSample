
#MinVersion 1.11.2
Uses "UI"
Uses "OS"

#Resource "thinSample.rc"

#Region "Form1"

DIALOG New units, Name Form1, %HWND_DESKTOP

CallBack Function Form1_OnLoad() As Long

  local hFont as Long
  hFont = Font_New("", 16)
  Control set font CBHNDL, Label1.id, hFont
  Label1.text = "You searched " & $dq & sSearch & $dq

  LISTBOX ADD CBHNDL, listbox1.id, sList USING $crlf

End Function

CallBack Function BTN_QUIT_OnClick() As Long
  
  dialog end Form1.Handle ' STOP keyword does not work here

End Function

CallBack Function BTN_MODIFY_OnClick() As Long
  
  local tmpstr as String
  Local selectioncount as DWord
  Local out_result() as string
  
  '[] [REF] https://www.thinbasic.com/public/products/thinBasic/help/html/control_gettext.htm
  '[t] Control_GetText does not work here  
  'tmpStr = Control_GetText(form1.Handle, listbox1.id) ' This does not work  
  'LISTBOX GET TEXT cbHndl, listbox1.iD TO tmpStr
  
  selectioncount = GetSelectedListboxItems(Form1.Handle, listbox1.id , out_result)
  
  if selectioncount < 1 then
    MsgBox Form1.Handle, "Please, first select at least one script", , "thinSample"
    Return
  Else
    for i as DWord = 1 to selectioncount
      OS_ShellExecute("edit", sSamplesPath & out_result(i),"","",%SW_NORMAL)
    next
  endif
  
  'OS_ShellExecute("edit", sSamplesPath & tmpStr,"","",%SW_NORMAL)
  
  dialog end Form1.Handle

End Function

CallBack Function Form1_OnCallBack() As Long
  
  local tmpstr as String

  SELECT CASE cbMsg
    CASE %WM_COMMAND
      SELECT CASE cbCtl
        case listbox1.iD
          select case cbCtlMsg
            case %LBN_DBLCLK
              LISTBOX GET TEXT cbHndl, listbox1.iD TO tmpStr
              'MsgBox 0, sSamplesPath & tmpStr
              if len(tmpStr)>7 then
                OS_ShellExecute("edit", sSamplesPath & tmpStr,"","",%SW_NORMAL)
                dialog end Form1.Handle
              endif
          end select
      end Select
  end Select
End Function

#EndRegion

#Region "splash"

DIALOG New units, Name splash, %HWND_DESKTOP

CallBack Function splash_OnLoad() As Long

  local hFont as Long
  hFont = Font_New("", 16)
  Control set font CBHNDL, searchinglabel.id, hFont
  searchinglabel.text = "Searching your scripts, please wait..." 

End Function

#EndRegion

Function TBMain() as long

  Global sSearch as String ' string to search in samples
  Global aFiles() as String ' list of the relevant samples
  Global sSamplesPath as String ' thinbasic samples main folder
  Global sList as String ' shell output
  
  local splashTimer as DWord ' to manage a minimal display time for the splash
  %MIN_SPLASH_DURATION = 500 ' ms

  sSamplesPath = APP_Path & "SampleScripts" & "\"
  sSearch = InputBox$(0,"What keyword to search for ?", "thinSample")

  if len(sSearch) = 0 Then ' user didn't input a string to search or cancelled

    MsgBox 0, "Search cancelled." ,, "Quitting", 1500
    Stop

  endif
  
  DIALOG SHOW MODeless splash.Handle
  splashTimer = GetTickCount

  sList = Shell_CaptureOutput("cmd /c findstr /s /i /m /p /C:" & $DQ & sSearch & $DQ & " *.tbasic", sSamplesPath ,%SW_HIDE,4000) ' up to 4s
  sList = RTrim$(sList,$CRLF)
  
  sleep(%MIN_SPLASH_DURATION + GetTickCount - splashTimer) ' avoid splash flash
  dialog end splash.Handle
  
  DIALOG SHOW MODAL Form1.Handle

end Function

'[][REF] https://www.thinbasic.com/community/showthread.php?13034-ListBox-control-multi-selection&p=95453&viewfull=1#post95453
function GetSelectedListboxItems(hDlg as dword, hCtl as long, byref out_result() as string) as long
  Local selectionCount, hList as long
   
  control handle hDlg, hCtl to hList
  selectionCount = SendMessage(hList, %LB_GETSELCOUNT, 0, 0)
   
  if selectionCount > 0 then
    Local itemIndexes(selectionCount) as long
    SendMessage(hList, %LB_GETSELITEMS, selectionCount, varptr(itemIndexes(1)))
      
    ' Fit the output array to selection count
    redim out_result(selectionCount)
      
    ' Limited to 512 characters, feel free to adjust
    Local singleTextItem as asciiz * 32767
     
    ' Extract all items from ListBox
    for i as long = 1 to selectionCount
      SendMessage(hList, %LB_GETTEXT, itemIndexes(i), varptr(singleTextItem))
 
      out_result(i) = singleTextItem
    next
     
    return selectionCount
  end if
end function

